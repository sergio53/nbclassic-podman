alias m.='mcedit'
alias rc='m. ~/.rc && . ~/.rc'
alias rc.='. ~/.rc'
alias rc..='m. -v ~/.rc'
alias b.='m. ~/.bashrc && . ~/.bashrc'

alias a..='alias'
alias a.='a.. | grep'
alias c.='clear'
alias e.='exit'
alias g.='git clone'
alias h.='htop'
alias w.='wget'
alias PATH='echo $PATH'
alias p.='ping krdr.sytes.net -i'
alias n..='sudo netstat -ntlp4'
alias n.='n.. | grep'

# functions:
# --------
forest () {
  if [ $# -eq 0 ]; then
    ps -ef --forest
  else
    ps -ef --forest | grep $1 | grep -v grep
  fi
}
rc... (){
  if [ $# -eq 0 ]; then
    cat ~/.rc
  else
    cat ~/.rc | grep $1
  fi
}

# ___________________________________________________________

alias off.='echo "Погасить дисплей"; sudo vbetool dpms off'
alias on.='echo "Включить дисплей";  sudo vbetool dpms on'
alias sctl.='sudo systemctl'
alias susp.='echo "Усыпить"; sctl. suspend'
alias hiber.='echo "Анабиоз"; sctl. hibernate'
alias reboot.='echo "Перезагузить"; sctl. reboot'
alias poff.='echo "Выключить питание"; sctl. poweroff'
# ___________________________________________________________

alias pod.='podman'
alias pod.login='pod. login --username sergio53 --password barikk1417 docker.io'

# Start portainer rootless:
#: pod. volume create portainer_data
#alias port.='pod. run -d -p 9444:9443 --name=portainer \
#  --security-opt label=disable \
#  -v /run/user/$(id -u)/podman/podman.sock:/var/run/docker.sock:Z \
#  -v portainer_data:/data:Z \
#   docker.io/portainer/portainer-ce:2.23.0'

#: pod. volume create yacht
#alias yacht.='pod. run -d -p 8000:8000 --name=yacht \
#  -v /run/user/$(id -u)/podman/podman.sock:/var/run/docker.sock:Z -v yacht:/config \
#  ghcr.io/selfhostedpro/yacht:latest'

# functions:
# ---------
pod.exec () { 
  pod. exec -ti $1 ${@:2}
}
pod.bash () {
  pod.exec -ti $1 bash
}
pod.mc () {
  pod.exec -ti $1 mc 
}
pod.rm () {
  pod. kill $1 ; pod. rm $1 ; pod. ps -a
}
pod.rmi () {
  pod. rmi $1 ; pod. images
}
pod.commit () {
  pod. commit $1 $2 ; pod. images
}

# _______________________________________________________________________


alias tljh.run='pod. run --privileged -d --name=tljh -p 8888:80 -p 8866:8866 \
  -v ~/podman-tljh/home:/home \
  -v ~/podman-tljh/srv/voila:/srv/voila \
  -v ~/podman-tljh/srv/scratch:/srv/scratch \
  -v ~/podman-tljh/srv/data/shared_data:/srv/data/shared_data \
  localhost/little_hub:latest \
  && pod. ps -a | grep tljh'

#
alias tljh.rm='pod. kill tljh && pod. rm tljh && pod. ps -a'
alias tljh.rmi='pod. rmi localhost/little_hub:latest && pod. images'
alias tljh.commit='pod. commit tljh localhost/little_hub:latest && pod. images'
alias tljh.push='pod.login && pod. push localhost/tljh:latest  sergio53/tljh:latest'
alias tljh.save='pod. image save tljh:latest | gzip > tljh.tgz'


tljh.exec () {
  pod. exec -ti tljh su -c "source /opt/tljh/user/bin/activate && $*"
}
alias tljh.bash='tljh.exec bash'
alias tljh.mc='tljh.exec mc'

alias tljh.admin='pod. exec -ti tljh su -c "cd && mc" jupyter-admin'
alias tljh.root='pod. exec -ti tljh mc'

# _________________________________________________________________________________________________________________________________

###########n nbclassic ############# nbclassic ########### nbclassi c############ nbclassic ##################

# aliases:
# -------
alias nbclassic.run='uid=1000;gid=100; dir=nbclassic; \
    subuidSize=$(( $(podman info --format "{{ range .Host.IDMappings.UIDMap }}+{{.Size }}{{end }}" ) - 1 )); \
    subgidSize=$(( $(podman info --format "{{ range .Host.IDMappings.GIDMap }}+{{.Size }}{{end }}" ) - 1 )); \
    mkdir -p ~/podmans_DIR/$dir \
    && podman run --name $dir -itd -p $2:8888 -p $3:8866 \
    -v ~/podmans_DIR/$dir:/home/jovyan --user $uid:$gid \
    --uidmap $uid:0:1 --uidmap 0:1:$uid --uidmap $(($uid+1)):$(($uid+1)):$(($subuidSize-$uid)) \
    --gidmap $gid:0:1 --gidmap 0:1:$gid --gidmap $(($gid+1)):$(($gid+1)):$(($subgidSize-$gid)) \
    localhost/nbclassic'

alias nbclassic.exec='pod.exec nbclassic'
alias nbclassic.bash='pod.exec nbclassic bash'
alias nbclassic.mc='pod.exec nbclassic mc'
alias nbclassic.rm='pod.rm nbclassic'
alias nbclassic.rmi='pod.rmi localhost/nbclassic:latest'
alias nbclassic.commit='pod.commit nbclassic localhost/nbclassic:latest'

alias nbclassic.token='pod.exec nbclassic  jupyter server list'
#.

# functions:
# ---------
nbclassic. () {
  if [ $# -eq 0 ]; then
    nbclassic. nbclassic 8888 8866
  else
    uid=1000; gid=100; \
    subuidSize=$(( $(podman info --format "{{ range .Host.IDMappings.UIDMap }}+{{.Size }}{{end }}" ) - 1 )); \
    subgidSize=$(( $(podman info --format "{{ range .Host.IDMappings.GIDMap }}+{{.Size }}{{end }}" ) - 1 )); \
    mkdir -p ~/podmans_DIR/NB_classic/$1 \
    && podman run --name $1 -itd -p $2:8888 -p $3:8866 \
    -v ~/podmans_DIR/NB_classic/$1:/home/jovyan --user $uid:$gid \
    --uidmap $uid:0:1 --uidmap 0:1:$uid --uidmap $(($uid+1)):$(($uid+1)):$(($subuidSize-$uid)) \
    --gidmap $gid:0:1 --gidmap 0:1:$gid --gidmap $(($gid+1)):$(($gid+1)):$(($subgidSize-$gid)) \
    localhost/nbclassic
  fi
}
jupyter.token () {
  pod.exec $1 jupyter server list
}

#.

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/usr/local/go/bin:~/.local/bin
#/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
